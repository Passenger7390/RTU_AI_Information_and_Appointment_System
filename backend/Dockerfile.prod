# Stage 1: Build (if needed, e.g. if you have C extensions or assets to compile)
FROM python:3.13.2-slim as builder

ENV VIRTUAL_ENV=/opt/venv
RUN python -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

WORKDIR /app
COPY requirements-rpi.txt .
RUN pip install --upgrade pip && pip install --no-cache-dir -r requirements-rpi.txt
RUN pip install uvicorn gunicorn
COPY . .

# Stage 2: Final image
FROM python:3.13.2-slim

# Copy the virtual environment from the builder stage
ENV VIRTUAL_ENV=/opt/venv
COPY --from=builder $VIRTUAL_ENV $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

WORKDIR /app
COPY --from=builder /app /app

EXPOSE 8000

# Create entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Use entrypoint script instead of direct command
ENTRYPOINT ["/entrypoint.sh"]