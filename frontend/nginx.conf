server {
    listen 80;
    server_name localhost;
    
    # Global settings
    client_max_body_size 100M;
    
    # -----------------------------------------------------------------------------
    # 1. Specific handling for the upload endpoint (must come first)
    # -----------------------------------------------------------------------------
    location /ad/upload {
        proxy_pass http://backend:8000/ad/upload/;  # Note trailing slash here
        proxy_http_version 1.1;
        proxy_request_buffering off;  # Important for file uploads
        client_max_body_size 100M;
        
        # Forward headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        # Preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        error_log /var/log/nginx/upload_error.log debug;
        access_log /var/log/nginx/upload_access.log;
    }
    
    # -----------------------------------------------------------------------------
    # 2. Enable gzip compression for static assets
    # -----------------------------------------------------------------------------
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # -----------------------------------------------------------------------------
    # 3. Serve static frontend files and add a /debug endpoint for testing
    # -----------------------------------------------------------------------------
    root /usr/share/nginx/html;
    index index.html;
    
    location /debug {
        default_type text/plain;
        return 200 "Backend URL: http://backend:8000";
    }
    
    # -----------------------------------------------------------------------------
    # 4. Handle routes that might be undefined and forward them to backend
    # -----------------------------------------------------------------------------
    location ~ ^/undefined/(.*) {
        rewrite ^/undefined/(.*)$ /$1 break;
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    }

    # -----------------------------------------------------------------------------
    # 5. Proxy direct API endpoints (e.g., /api, /ray, /token, /auth, /ad)
    # -----------------------------------------------------------------------------
    location ~ ^/(api|ray|token|auth|ad|professor|appointment|otp)/ {
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log debug;
        
        proxy_request_buffering off;
        client_max_body_size 100M;
        
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Special case for media files
    location /ad/media/ {
        # Proxy to backend properly
        proxy_pass http://backend:8000/ad/media/;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        # Add caching for media
        expires 7d;
    }
    
    # -----------------------------------------------------------------------------
    # 6. Frontend client-side routes
    # -----------------------------------------------------------------------------
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
    }
    
    # -----------------------------------------------------------------------------
    # 7. Error pages
    # -----------------------------------------------------------------------------
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
